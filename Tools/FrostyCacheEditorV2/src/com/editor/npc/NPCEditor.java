/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.editor.npc;

import com.alex.loaders.npcs.NPCDefinitions;
import com.editor.Main;
import com.editor.Utils;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Travis
 */
public class NPCEditor extends javax.swing.JFrame {

    private NPCDefinitions defs;
    private NPCSelection ns;

    public NPCEditor(NPCSelection ns, NPCDefinitions defs) {
        this.defs = defs;
        this.ns = ns;
        initComponents();
        setResizable(false);
        setTitle("NPC Editor");
        setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * Creates new form NPCEditor
     */
    public NPCEditor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        combatLevel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        npcSize = new javax.swing.JTextField();
        visibleOnMap = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        npcHeight = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        npcWidth = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        walkMask = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        respawnDirection = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        renderEmote = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        modelIds = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        optionsField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        modelColorField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textureColorField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        unknownArray1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        unknownArray2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        unknownArray3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        unknownArray4 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        unknownArray5 = new javax.swing.JTextField();
        unknownBoolean1 = new javax.swing.JCheckBox();
        unknownBoolean2 = new javax.swing.JCheckBox();
        unknownBoolean3 = new javax.swing.JCheckBox();
        unknownBoolean5 = new javax.swing.JCheckBox();
        unknownBoolean4 = new javax.swing.JCheckBox();
        unknownBoolean6 = new javax.swing.JCheckBox();
        unknownBoolean7 = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        unknownInt1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        unknownInt2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        unknownInt3 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        unknownInt4 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        unknownInt5 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        unknownInt6 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        unknownInt7 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        unknownInt8 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        unknownInt9 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        unknownInt10 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        unknownInt11 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        unknownInt12 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        unknownInt13 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        unknownInt14 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        unknownInt15 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        unknownInt16 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        unknownInt17 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        unknownInt18 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        unknownInt19 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        unknownInt20 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        unknownInt21 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientScriptOutput = new javax.swing.JTextArea();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        csk1 = new javax.swing.JTextField();
        csk2 = new javax.swing.JTextField();
        csk3 = new javax.swing.JTextField();
        csk4 = new javax.swing.JTextField();
        csk5 = new javax.swing.JTextField();
        csk6 = new javax.swing.JTextField();
        csv1 = new javax.swing.JTextField();
        csv2 = new javax.swing.JTextField();
        csv3 = new javax.swing.JTextField();
        csv4 = new javax.swing.JTextField();
        csv5 = new javax.swing.JTextField();
        csv6 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        reloadButton = new javax.swing.JMenuItem();
        saveButton = new javax.swing.JMenuItem();
        addModelButton = new javax.swing.JMenuItem();
        exportButton = new javax.swing.JMenuItem();
        exitButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        name.setText(defs.getName());

        jLabel4.setText("Combat Level");

        combatLevel.setText(""+defs.getCombatLevel());

        jLabel5.setText("NPC Size");

        npcSize.setText(""+defs.getSize());

        visibleOnMap.setSelected(defs.drawMinimapDot);
        visibleOnMap.setText("Visible On Map");

        jLabel10.setText("NPC Height");

        npcHeight.setText(""+defs.height);

        jLabel11.setText("NPC Width");

        npcWidth.setText(""+defs.width);

        jLabel12.setText("Walk Mask");

        walkMask.setText(""+defs.walkMask);

        jLabel13.setText("Respawn Direction");

        respawnDirection.setText(""+defs.respawnDirection);

        jLabel14.setText("Render Animation");

        renderEmote.setText(""+defs.renderTypeID);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(visibleOnMap)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(npcSize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(combatLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(npcHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(npcWidth)
                                .addComponent(walkMask))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(respawnDirection, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(renderEmote))))
                .addContainerGap(455, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combatLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(npcSize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visibleOnMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(npcHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(npcWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(walkMask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(respawnDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(renderEmote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("General", jPanel1);

        jLabel3.setText("Model IDs");

        modelIds.setText(getModelIds());

        jLabel6.setText("Chat Heads");

        jTextField2.setText(getChatHeads());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(modelIds, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField2))
                .addContainerGap(379, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelIds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Model", jPanel2);

        jLabel7.setText("Options");

        optionsField.setText(getOpts());

        jLabel8.setText("Model Colors");

        modelColorField.setText(getChangedModelColors());

        jLabel9.setText("Texture Colors");

        textureColorField.setText(getChangedTextureColors());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(optionsField, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(modelColorField)
                    .addComponent(jLabel9)
                    .addComponent(textureColorField))
                .addContainerGap(379, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelColorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textureColorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Options", jPanel3);

        jLabel15.setText("unknownArray1");

        unknownArray1.setText(getUnknownArray1());

        jLabel16.setText("unknownArray2");

        unknownArray2.setText(getUnknownArray2());

        jLabel17.setText("unknownArray3");

        unknownArray3.setText(getUnknownArray3());

        jLabel18.setText("unknownArray4");

        unknownArray4.setText(getUnknownArray4());

        jLabel19.setText("unknownArray5");

        unknownArray5.setText(getUnknownArray5());

        unknownBoolean1.setSelected(defs.isVisible);
        unknownBoolean1.setText("unknownBoolean1");

        unknownBoolean2.setSelected(defs.clickable);
        unknownBoolean2.setText("unknownBoolean2");

        unknownBoolean3.setSelected(defs.aBool8492);
        unknownBoolean3.setText("unknownBoolean3");

        unknownBoolean5.setSelected(defs.aBool8460);
        unknownBoolean5.setText("unknownBoolean5");

        unknownBoolean4.setSelected(defs.aBook8472);
        unknownBoolean4.setText("unknownBoolean4");

        unknownBoolean6.setSelected(defs.aBool8459);
        unknownBoolean6.setText("unknownBoolean6");

        unknownBoolean7.setSelected(defs.unknownBoolean7);
        unknownBoolean7.setText("unknownBoolean7");

        jLabel20.setText("unknownInt1");

        unknownInt1.setText(""+defs.ambient);

        jLabel21.setText("unknownInt2");

        unknownInt2.setText(""+defs.contrast);

        jLabel22.setText("unknownInt3");

        unknownInt3.setText(""+defs.degreesToTurn);

        jLabel23.setText("unknownInt4");

        unknownInt4.setText(""+defs.transVarBit);

        jLabel24.setText("unknownInt5");

        unknownInt5.setText(""+defs.transVar);

        jLabel25.setText("unknownInt6");

        unknownInt6.setText(""+defs.unknownInt6);

        jLabel26.setText("unknownInt7");

        unknownInt7.setText(""+defs.anInt8443);

        jLabel27.setText("unknownInt8");

        unknownInt8.setText(""+defs.anInt8466);

        jLabel28.setText("unknownInt9");

        unknownInt9.setText(""+defs.anInt8483);

        jLabel29.setText("unknownInt10");

        unknownInt10.setText(""+defs.anInt8484);

        jLabel30.setText("unknownInt11");

        unknownInt11.setText(""+defs.anInt8455);

        jLabel31.setText("unknownInt12");

        unknownInt12.setText(""+defs.anInt8457);

        jLabel32.setText("unknownInt13");

        unknownInt13.setText(""+defs.unknownInt13);

        jLabel33.setText("unknownInt14");

        unknownInt14.setText(""+defs.unknownInt14);

        jLabel34.setText("unknownInt15");

        unknownInt15.setText(""+defs.unknownInt15);

        jLabel35.setText("unknownInt16");

        unknownInt16.setText(""+defs.unknownInt16);

        jLabel36.setText("unknownInt17");

        unknownInt17.setText(""+defs.attackOpCursor);

        jLabel37.setText("unknownInt18");

        unknownInt18.setText(""+defs.anInt8465);

        jLabel38.setText("unknownInt19");

        unknownInt19.setText(""+defs.unknownInt19);

        jLabel39.setText("unknownInt20");

        unknownInt20.setText(""+defs.anInt8488);

        jLabel40.setText("unknownInt21");

        unknownInt21.setText(""+defs.mapIcon);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unknownArray2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(unknownArray1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unknownBoolean5)
                                    .addComponent(unknownBoolean6)
                                    .addComponent(unknownBoolean7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unknownInt12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unknownInt11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unknownInt10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unknownArray3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unknownBoolean4)
                            .addComponent(unknownBoolean3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unknownArray4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(unknownArray5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(unknownBoolean1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(unknownBoolean2)
                                        .addGap(80, 80, 80)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unknownInt9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unknownInt8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel38)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(unknownInt19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel39)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(unknownInt20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unknownInt21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(88, 88, 88))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(4, 4, 4)
                        .addComponent(unknownArray1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unknownArray2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(unknownBoolean5)
                                    .addComponent(jLabel29)
                                    .addComponent(unknownInt10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(unknownBoolean6)
                                .addComponent(jLabel30)
                                .addComponent(unknownInt11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unknownBoolean7)
                            .addComponent(jLabel31)
                            .addComponent(unknownInt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(unknownInt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32)
                            .addComponent(unknownInt13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel21)
                    .addComponent(unknownInt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(unknownInt14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownArray3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(unknownInt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(unknownInt15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23)
                    .addComponent(unknownInt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(unknownInt16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownArray4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(unknownInt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(unknownInt17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unknownInt6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jLabel25)
                        .addComponent(jLabel37)
                        .addComponent(unknownInt18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownArray5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(unknownInt7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(unknownInt19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownBoolean1)
                    .addComponent(jLabel27)
                    .addComponent(unknownInt8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(unknownInt20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownBoolean2)
                    .addComponent(jLabel28)
                    .addComponent(unknownInt9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(unknownInt21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unknownBoolean3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unknownBoolean4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Unknown Definitions", jPanel4);

        clientScriptOutput.setColumns(20);
        clientScriptOutput.setRows(5);
        clientScriptOutput.setText(getClientScripts());
        jScrollPane1.setViewportView(clientScriptOutput);

        jLabel41.setText("KEY");

        jLabel42.setText("VALUE");

        jLabel43.setText("Add keys into the boxes on the left to edit or add them.");

        jLabel44.setText("Add values on the right to match the keys.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addGap(81, 81, 81))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43))
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(csk4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(csk5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(csk6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(csk1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(csk2)
                            .addComponent(csk3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(csv1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv2, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(csv3)
                            .addComponent(csv4)
                            .addComponent(csv5)
                            .addComponent(csv6))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csk6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csv6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addGap(45, 45, 45))))
        );

        jTabbedPane1.addTab("Clientscripts", jPanel5);

        jLabel2.setText("Currently Viewing Definitions of NPC: "+defs.getId()+" - "+defs.getName());

        jMenu1.setText("File");

        reloadButton.setText("Reload");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });
        jMenu1.add(reloadButton);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jMenu1.add(saveButton);

        addModelButton.setText("Add Model");
        addModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addModelButtonActionPerformed(evt);
            }
        });
        jMenu1.add(addModelButton);

        exportButton.setText("Export to .txt");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exportButton);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exitButton);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        reload();
    }//GEN-LAST:event_reloadButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        save();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void addModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addModelButtonActionPerformed
        addModel();
    }//GEN-LAST:event_addModelButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        export();
    }//GEN-LAST:event_exportButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NPCEditor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addModelButton;
    private javax.swing.JTextArea clientScriptOutput;
    private javax.swing.JTextField combatLevel;
    private javax.swing.JTextField csk1;
    private javax.swing.JTextField csk2;
    private javax.swing.JTextField csk3;
    private javax.swing.JTextField csk4;
    private javax.swing.JTextField csk5;
    private javax.swing.JTextField csk6;
    private javax.swing.JTextField csv1;
    private javax.swing.JTextField csv2;
    private javax.swing.JTextField csv3;
    private javax.swing.JTextField csv4;
    private javax.swing.JTextField csv5;
    private javax.swing.JTextField csv6;
    private javax.swing.JMenuItem exitButton;
    private javax.swing.JMenuItem exportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField modelColorField;
    private javax.swing.JTextField modelIds;
    private javax.swing.JTextField name;
    private javax.swing.JTextField npcHeight;
    private javax.swing.JTextField npcSize;
    private javax.swing.JTextField npcWidth;
    private javax.swing.JTextField optionsField;
    private javax.swing.JMenuItem reloadButton;
    private javax.swing.JTextField renderEmote;
    private javax.swing.JTextField respawnDirection;
    private javax.swing.JMenuItem saveButton;
    private javax.swing.JTextField textureColorField;
    private javax.swing.JTextField unknownArray1;
    private javax.swing.JTextField unknownArray2;
    private javax.swing.JTextField unknownArray3;
    private javax.swing.JTextField unknownArray4;
    private javax.swing.JTextField unknownArray5;
    private javax.swing.JCheckBox unknownBoolean1;
    private javax.swing.JCheckBox unknownBoolean2;
    private javax.swing.JCheckBox unknownBoolean3;
    private javax.swing.JCheckBox unknownBoolean4;
    private javax.swing.JCheckBox unknownBoolean5;
    private javax.swing.JCheckBox unknownBoolean6;
    private javax.swing.JCheckBox unknownBoolean7;
    private javax.swing.JTextField unknownInt1;
    private javax.swing.JTextField unknownInt10;
    private javax.swing.JTextField unknownInt11;
    private javax.swing.JTextField unknownInt12;
    private javax.swing.JTextField unknownInt13;
    private javax.swing.JTextField unknownInt14;
    private javax.swing.JTextField unknownInt15;
    private javax.swing.JTextField unknownInt16;
    private javax.swing.JTextField unknownInt17;
    private javax.swing.JTextField unknownInt18;
    private javax.swing.JTextField unknownInt19;
    private javax.swing.JTextField unknownInt2;
    private javax.swing.JTextField unknownInt20;
    private javax.swing.JTextField unknownInt21;
    private javax.swing.JTextField unknownInt3;
    private javax.swing.JTextField unknownInt4;
    private javax.swing.JTextField unknownInt5;
    private javax.swing.JTextField unknownInt6;
    private javax.swing.JTextField unknownInt7;
    private javax.swing.JTextField unknownInt8;
    private javax.swing.JTextField unknownInt9;
    private javax.swing.JCheckBox visibleOnMap;
    private javax.swing.JTextField walkMask;
    // End of variables declaration//GEN-END:variables

    private void reload() {
        name.setText(defs.getName());
        combatLevel.setText("" + defs.getCombatLevel());
        visibleOnMap.setSelected(defs.drawMinimapDot);
        npcHeight.setText("" + defs.height);
        npcWidth.setText("" + defs.width);
        walkMask.setText("" + defs.walkMask);
        respawnDirection.setText("" + defs.respawnDirection);
        renderEmote.setText("" + defs.renderTypeID);
        modelIds.setText(getModelIds());
        jTextField2.setText(getChatHeads());
        optionsField.setText(getOpts());
        modelColorField.setText(getChangedModelColors());
        textureColorField.setText(getChangedTextureColors());
        unknownArray1.setText(getUnknownArray1());
        unknownArray2.setText(getUnknownArray2());
        unknownArray3.setText(getUnknownArray3());
        unknownArray4.setText(getUnknownArray4());
        unknownArray5.setText(getUnknownArray5());
        unknownBoolean1.setSelected(defs.isVisible);
        unknownBoolean2.setSelected(defs.clickable);
        unknownBoolean3.setSelected(defs.aBool8492);
        unknownBoolean5.setSelected(defs.aBool8460);
        unknownBoolean4.setSelected(defs.aBook8472);
        unknownBoolean6.setSelected(defs.aBool8459);
        unknownBoolean7.setSelected(defs.unknownBoolean7);
        unknownInt1.setText("" + defs.ambient);
        unknownInt2.setText("" + defs.contrast);
        unknownInt3.setText("" + defs.degreesToTurn);
        unknownInt4.setText("" + defs.transVarBit);
        unknownInt5.setText("" + defs.transVar);
        unknownInt6.setText("" + defs.unknownInt6);
        unknownInt7.setText("" + defs.anInt8443);
        unknownInt8.setText("" + defs.anInt8466);
        unknownInt9.setText("" + defs.anInt8483);
        unknownInt10.setText("" + defs.anInt8484);
        unknownInt11.setText("" + defs.anInt8455);
        unknownInt12.setText("" + defs.anInt8457);
        unknownInt13.setText("" + defs.unknownInt13);
        unknownInt14.setText("" + defs.unknownInt14);
        unknownInt15.setText("" + defs.unknownInt15);
        unknownInt16.setText("" + defs.unknownInt16);
        unknownInt17.setText("" + defs.attackOpCursor);
        unknownInt18.setText("" + defs.anInt8465);
        unknownInt19.setText("" + defs.unknownInt19);
        unknownInt20.setText("" + defs.anInt8488);
        unknownInt21.setText("" + defs.mapIcon);
        clientScriptOutput.setText(getClientScripts());
    }

    private void save() {
        try {
            defs.name = name.getText();
            defs.level = Integer.parseInt(combatLevel.getText());
            defs.drawMinimapDot = visibleOnMap.isSelected();
            defs.height = Integer.parseInt(npcHeight.getText());
            defs.width = Integer.parseInt(npcWidth.getText());
            defs.walkMask = (byte) Integer.parseInt(walkMask.getText());
            defs.respawnDirection = (byte) Integer.parseInt(respawnDirection.getText());
            defs.renderTypeID = Integer.parseInt(renderEmote.getText());
            if (!modelIds.getText().equals("")) {
                String[] modelsIds = modelIds.getText().split(";");
                for (int i = 0; i < defs.meshes.length; i++) {
                    defs.meshes[i] = Integer.parseInt(modelsIds[i]);
                }
            }
            if (!jTextField2.getText().equals("")) {
                String[] chatHeadIds = jTextField2.getText().split(";");
                for (int i = 0; i < defs.interfaceModelId.length; i++) {
                    defs.interfaceModelId[i] = Integer.parseInt(chatHeadIds[i]);
                }
            }
            String[] options = optionsField.getText().split(";");
            for (int i = 0; i < defs.op.length; i++) {
                defs.op[i] = options[i].equals("null") ? null : options[i];
            }
            defs.resetModelColors();
            if (!modelColorField.getText().equals("")) {
                String[] splitedModelColorsTexts = modelColorField.getText().split(";");
                for (String t : splitedModelColorsTexts) {
                    String[] editedColor = t.split("=");
                    defs.changeModelColor(Integer.valueOf(editedColor[0]), Integer.valueOf(editedColor[1]));
                }
            }
            defs.resetTextureColors();
            if (!textureColorField.getText().equals("")) {
                String[] splitedTextureColorsTexts = textureColorField.getText().split(";");
                for (String t : splitedTextureColorsTexts) {
                    String[] editedColor = t.split("=");
                    defs.changeTextureColor(Integer.valueOf(editedColor[0]), Integer.valueOf(editedColor[1]));
                }
            }
            if (!unknownArray1.getText().equals("")) {
                String[] array1 = unknownArray1.getText().split(";");
                for (int i = 0; i < defs.recolorDstPalette.length; i++) {
                    defs.recolorDstPalette[i] = (byte) Integer.parseInt(array1[i]);
                }
            }
            if (!unknownArray2.getText().equals("")) {
                String[] array2 = unknownArray2.getText().split(";");
                for (int i = 0; i < defs.transforms.length; i++) {
                    defs.transforms[i] = Integer.parseInt(array2[i]);
                }
            }
            if (!unknownArray3.getText().equals("")) {
                String[] array3 = unknownArray3.getText().split(";");
                for (int i = 0; i < defs.anIntArrayArray8478.length; i++) {
                    defs.anIntArrayArray8478[0][i] = Integer.parseInt(array3[i]);
                }
            }
            if (!unknownArray4.getText().equals("")) {
                String[] array4 = unknownArray4.getText().split(";");
                for (int i = 0; i < defs.anIntArray8493.length; i++) {
                    defs.anIntArray8493[i] = Integer.parseInt(array4[i]);
                }
            }
            if (!unknownArray5.getText().equals("")) {
                String[] array5 = unknownArray5.getText().split(";");
                for (int i = 0; i < defs.cursorOps.length; i++) {
                    defs.cursorOps[i] = Integer.parseInt(array5[i]);
                }
            }
            defs.isVisible = unknownBoolean1.isSelected();
            defs.clickable = unknownBoolean2.isSelected();
            defs.aBool8492 = unknownBoolean3.isSelected();
            defs.aBook8472 = unknownBoolean4.isSelected();
            defs.aBool8460 = unknownBoolean5.isSelected();
            defs.aBool8459 = unknownBoolean6.isSelected();
            defs.unknownBoolean7 = unknownBoolean7.isSelected();

            if (!unknownInt1.getText().equals("")) {
                defs.ambient = Integer.parseInt(unknownInt1.getText());
            }
            if (!unknownInt2.getText().equals("")) {
                defs.contrast = Integer.parseInt(unknownInt2.getText());
            }
            if (!unknownInt3.getText().equals("")) {
                defs.degreesToTurn = Integer.parseInt(unknownInt3.getText());
            }
            if (!unknownInt4.getText().equals("")) {
                defs.transVarBit = Integer.parseInt(unknownInt4.getText());
            }
            if (!unknownInt5.getText().equals("")) {
                defs.transVar = Integer.parseInt(unknownInt5.getText());
            }
            if (!unknownInt6.getText().equals("")) {
                defs.unknownInt6 = Integer.parseInt(unknownInt6.getText());
            }
            if (!unknownInt7.getText().equals("")) {
                defs.anInt8443 = Integer.parseInt(unknownInt7.getText());
            }
            if (!unknownInt8.getText().equals("")) {
                defs.anInt8466 = Integer.parseInt(unknownInt8.getText());
            }
            if (!unknownInt9.getText().equals("")) {
                defs.anInt8483 = Integer.parseInt(unknownInt9.getText());
            }
            if (!unknownInt10.getText().equals("")) {
                defs.anInt8484 = Integer.parseInt(unknownInt10.getText());
            }
            if (!unknownInt11.getText().equals("")) {
                defs.anInt8455 = Integer.parseInt(unknownInt11.getText());
            }
            if (!unknownInt12.getText().equals("")) {
                defs.anInt8457 = Integer.parseInt(unknownInt12.getText());
            }
            if (!unknownInt13.getText().equals("")) {
                defs.unknownInt13 = Integer.parseInt(unknownInt13.getText());
            }
            if (!unknownInt14.getText().equals("")) {
                defs.unknownInt14 = Integer.parseInt(unknownInt14.getText());
            }
            if (!unknownInt15.getText().equals("")) {
                defs.unknownInt15 = Integer.parseInt(unknownInt15.getText());
            }
            if (!unknownInt16.getText().equals("")) {
                defs.unknownInt16 = Integer.parseInt(unknownInt16.getText());
            }
            if (!unknownInt17.getText().equals("")) {
                defs.attackOpCursor = Integer.parseInt(unknownInt17.getText());
            }
            if (!unknownInt18.getText().equals("")) {
                defs.anInt8465 = Integer.parseInt(unknownInt18.getText());
            }
            if (!unknownInt19.getText().equals("")) {
                defs.unknownInt19 = Integer.parseInt(unknownInt19.getText());
            }
            if (!unknownInt20.getText().equals("")) {
                defs.anInt8488 = Integer.parseInt(unknownInt20.getText());
            }
            if (!unknownInt21.getText().equals("")) {
                defs.mapIcon = Integer.parseInt(unknownInt21.getText());
            }
            try {
                if (!csk1.getText().equals("") && !csv1.getText().equals("")) {
                    try {
                        defs.config.remove(csk1);
                        defs.config.put(Integer.parseInt(csk1.getText()), Integer.parseInt(csv1.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk1);
                        defs.config.put(Integer.parseInt(csk1.getText()), csv1.getText().toString());
                    }
                }
                if (!csk2.getText().equals("") && !csv2.getText().equals("")) {
                    try {
                        defs.config.remove(csk2);
                        defs.config.put(Integer.parseInt(csk2.getText()), Integer.parseInt(csv2.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk2);
                        defs.config.put(Integer.parseInt(csk2.getText()), csv2.getText().toString());
                    }
                }
                if (!csk3.getText().equals("") && !csv3.getText().equals("")) {
                    try {
                        defs.config.remove(csk3);
                        defs.config.put(Integer.parseInt(csk3.getText()), Integer.parseInt(csv3.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk3);
                        defs.config.put(Integer.parseInt(csk3.getText()), csv3.getText().toString());
                    }
                }
                if (!csk4.getText().equals("") && !csv4.getText().equals("")) {
                    try {
                        defs.config.remove(csk4);
                        defs.config.put(Integer.parseInt(csk4.getText()), Integer.parseInt(csv4.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk4);
                        defs.config.put(Integer.parseInt(csk4.getText()), csv4.getText().toString());
                    }
                }
                if (!csk5.getText().equals("") && !csv5.getText().equals("")) {
                    try {
                        defs.config.remove(csk5);
                        defs.config.put(Integer.parseInt(csk5.getText()), Integer.parseInt(csv5.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk5);
                        defs.config.put(Integer.parseInt(csk5.getText()), csv5.getText().toString());
                    }
                }
                if (!csk6.getText().equals("") && !csv6.getText().equals("")) {
                    try {
                        defs.config.remove(csk6);
                        defs.config.put(Integer.parseInt(csk6.getText()), Integer.parseInt(csv6.getText()));
                    } catch (Exception e) {
                        defs.config.remove(csk6);
                        defs.config.put(Integer.parseInt(csk6.getText()), csv6.getText().toString());
                    }
                }
            } catch (Exception e) {
                defs.config = new HashMap<Integer, Object>(1);
            }
            defs.write(ns.STORE);
            ns.updateNPCDefs(defs);
        } catch (Exception e) {
            Main.log("NPCEditor", "Cannot save. Please check for mistypes.");
            System.out.println(e);
        }
    }

    private void addModel() {
        JFrame frame = new JFrame();
        int result = JOptionPane.showConfirmDialog(frame, "Do you want to specify a model ID?");
        if (result == JOptionPane.YES_OPTION) {
            JFrame newModel = new JFrame();
            Object newModelResult = JOptionPane.showInputDialog(newModel, "Enter new model ID:");
            if (Integer.parseInt(newModelResult.toString()) != -1) {
                final JFileChooser fc = new JFileChooser();
                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
                int returnVal = fc.showOpenDialog(NPCEditor.this);

                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    try {
                        Main.log("NPCEditor", "The model ID of the recently packed model is: " + Utils.packCustomModel(ns.STORE, Utils.getBytesFromFile(new File(file.getPath().toString())), Integer.parseInt(newModelResult.toString())));
                    } catch (IOException ex) {
                        Main.log("NPCEditor", "There was an error packing the model.");
                    }
                }
            }
        } else if (result == JOptionPane.NO_OPTION) {
            final JFileChooser fc = new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            int returnVal = fc.showOpenDialog(NPCEditor.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    Main.log("NPCEditor", "The model ID of the recently packed model is: " + Utils.packCustomModel(ns.STORE, Utils.getBytesFromFile(new File(file.getPath().toString()))));
                } catch (IOException ex) {
                    Main.log("NPCEditor", "There was an error packing the model.");
                }
            }
        }
    }

    private void export() {
        File f = new File(System.getProperty("user.home") + "/FrostyCacheEditor/npcs/");
        f.mkdirs();
        String lineSep = System.getProperty("line.separator");
        Writer writer = null;
        try {
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream(System.getProperty("user.home") + "/FrostyCacheEditor/npcs/" + defs.id + ".txt"), "utf-8"));
            writer.write("name = " + defs.getName());
            writer.write(lineSep);
            writer.write("combat level = " + defs.getCombatLevel());
            writer.write(lineSep);
            writer.write("isVisibleOnMap = " + defs.drawMinimapDot);
            writer.write(lineSep);
            writer.write("height = " + defs.height);
            writer.write(lineSep);
            writer.write("width = " + defs.width);
            writer.write(lineSep);
            writer.write("walk mask = " + defs.walkMask);
            writer.write(lineSep);
            writer.write("respawn direction = " + defs.respawnDirection);
            writer.write(lineSep);
            writer.write("render emote = " + defs.renderTypeID);
            writer.write(lineSep);
            writer.write("model ids = " + getModelIds());
            writer.write(lineSep);
            writer.write("chat head model ids = " + getChatHeads());
            writer.write(lineSep);
            writer.write("options = " + getOpts());
            writer.write(lineSep);
            writer.write("model colors = " + getChangedModelColors());
            writer.write(lineSep);
            writer.write("texture colors = " + getChangedTextureColors());
            writer.write(lineSep);
            writer.write("unknown array1 = " + getUnknownArray1());
            writer.write(lineSep);
            writer.write("unknown array2 = " + getUnknownArray2());
            writer.write(lineSep);
            writer.write("unknown array3 = " + getUnknownArray3());
            writer.write(lineSep);
            writer.write("unknown array4 = " + getUnknownArray4());
            writer.write(lineSep);
            writer.write("unknown array5 = " + getUnknownArray5());
            writer.write(lineSep);
            writer.write("unknownBoolean1 = " + defs.isVisible);
            writer.write(lineSep);
            writer.write("unknwonBoolean2 = " + defs.clickable);
            writer.write(lineSep);
            writer.write("unknownBoolean3 = " + defs.aBool8492);
            writer.write(lineSep);
            writer.write("unknownBoolean4 = " + defs.aBool8460);
            writer.write(lineSep);
            writer.write("unknownBoolean5 = " + defs.aBook8472);
            writer.write(lineSep);
            writer.write("unknownBoolean6 = " + defs.aBool8459);
            writer.write(lineSep);
            writer.write("unknownBoolean7 = " + defs.unknownBoolean7);
            writer.write(lineSep);
            writer.write("unknown int1 = " + defs.ambient);
            writer.write(lineSep);
            writer.write("unknown int2 = " + defs.contrast);
            writer.write(lineSep);
            writer.write("unknown int3 = " + defs.degreesToTurn);
            writer.write(lineSep);
            writer.write("unknown int4 = " + defs.transVarBit);
            writer.write(lineSep);
            writer.write("unknown int5 = " + defs.transVar);
            writer.write(lineSep);
            writer.write("unknown int6 = " + defs.unknownInt6);
            writer.write(lineSep);
            writer.write("unknown int7 = " + defs.anInt8443);
            writer.write(lineSep);
            writer.write("unknown int8 = " + defs.anInt8466);
            writer.write(lineSep);
            writer.write("unknown int9 = " + defs.anInt8483);
            writer.write(lineSep);
            writer.write("unknown int10 = " + defs.anInt8484);
            writer.write(lineSep);
            writer.write("unknown int11 = " + defs.anInt8455);
            writer.write(lineSep);
            writer.write("unknown int12 = " + defs.anInt8457);
            writer.write(lineSep);
            writer.write("unknown int13 = " + defs.unknownInt13);
            writer.write(lineSep);
            writer.write("unknown int14 = " + defs.unknownInt14);
            writer.write(lineSep);
            writer.write("unknown int15 = " + defs.unknownInt15);
            writer.write(lineSep);
            writer.write("unknown int16 = " + defs.unknownInt16);
            writer.write(lineSep);
            writer.write("unknown int17 = " + defs.attackOpCursor);
            writer.write(lineSep);
            writer.write("unknown int18 = " + defs.anInt8465);
            writer.write(lineSep);
            writer.write("unknown int19 = " + defs.unknownInt19);
            writer.write(lineSep);
            writer.write("unknown int20 = " + defs.anInt8488);
            writer.write(lineSep);
            writer.write("unknown int21 = " + defs.mapIcon);
            writer.write(lineSep);
            writer.write("Clientscripts");
            writer.write(lineSep);
            if (defs.config != null) {
                for (int key : defs.config.keySet()) {
                    Object value = defs.config.get(key);
                    writer.write("KEY: " + key + ", VALUE: " + value);
                    writer.write(lineSep);
                }
            }
        } catch (IOException ex) {
            Main.log("NPCEditor", "Failed to export NPC Defs to .txt");
        } finally {
            try {
                writer.close();
            } catch (Exception ex) {
            }
        }
    }

    public String getClientScripts() {
        String text = "";
        String lineSep = System.getProperty("line.separator");
        if (defs.config != null) {
            for (int key : defs.config.keySet()) {
                Object value = defs.config.get(key);
                text += "KEY: " + key + ", VALUE: " + value;
                text += lineSep;
            }
        }
        return text;
    }

    public String getModelIds() {
        String text = "";
        try {
            for (int index : defs.meshes) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getOpts() {
        String text = "";
        for (String option : defs.getOptions()) {
            text += (option == null ? "null" : option) + ";";
        }
        return text;
    }

    public String getChangedModelColors() {
        String text = "";
        if (defs.recolorDst != null) {
            for (int i = 0; i < defs.recolorDst.length; i++) {
                text += defs.recolorDst[i] + "=" + defs.recolorSrc[i] + ";";
            }
        }
        return text;
    }

    public String getChangedTextureColors() {
        String text = "";
        if (defs.retextureSrc != null) {
            for (int i = 0; i < defs.retextureSrc.length; i++) {
                text += defs.retextureSrc[i] + "=" + defs.retextureDst[i] + ";";
            }
        }
        return text;
    }

    public String getChatHeads() {
        String text = "";
        try {
            for (int id : defs.interfaceModelId) {
                text += id + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getUnknownArray1() {
        String text = "";
        try {
            for (int index : defs.recolorDstPalette) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getUnknownArray2() {
        String text = "";
        try {
            for (int index : defs.transforms) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getUnknownArray3() {
        String text = "";
        try {
            for (int index : defs.anIntArrayArray8478[0]) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getUnknownArray4() {
        String text = "";
        try {
            for (int index : defs.anIntArray8493) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }

    public String getUnknownArray5() {
        String text = "";
        try {
            for (int index : defs.cursorOps) {
                text += index + ";";
            }
        } catch (Exception e) {
        }
        return text;
    }
}
