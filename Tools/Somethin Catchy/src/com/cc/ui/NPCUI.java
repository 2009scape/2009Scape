/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cc.ui;

import com.alex.store.Store;
import com.cc.Main;
import com.cc.tools.NPCPack;
import com.cc.tools.Utils;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author travis
 */
public class NPCUI extends javax.swing.JFrame {

    /**
     * Creates new form NPCUI
     */
    public NPCUI() {
        setTitle("Custom NPC Packing - Somethin Catchy");
        setResizable(false);
        redirectSystemStreams();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backToMainButton = new javax.swing.JButton();
        packButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        npcName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        npcID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        npcSize = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        copyNPCID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        renderAnimation = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        spawnDirection = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        combatLevel = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        npcModel1 = new javax.swing.JTextField();
        npcModel1Button = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        npcModel2 = new javax.swing.JTextField();
        npcModel2Button = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        npcModel3 = new javax.swing.JTextField();
        npcModel3Button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        npcModel4 = new javax.swing.JTextField();
        npcModel4Button = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        npcModel5 = new javax.swing.JTextField();
        npcModel5Button = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        npcModel6 = new javax.swing.JTextField();
        npcModel6Button = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        npcModel7 = new javax.swing.JTextField();
        npcModel7Button = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        npcModel8 = new javax.swing.JTextField();
        npcModel8Button = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        npcModel9 = new javax.swing.JTextField();
        npcModel9Button = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        npcModel10 = new javax.swing.JTextField();
        npcModel10Button = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        npcModel11 = new javax.swing.JTextField();
        npcModel11Button = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        npcModel12 = new javax.swing.JTextField();
        npcModel12Button = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        changedModelColors = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        opt0 = new javax.swing.JTextField();
        opt1 = new javax.swing.JTextField();
        opt2 = new javax.swing.JTextField();
        opt3 = new javax.swing.JTextField();
        opt4 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        chatHeadModel = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cc/ui/customnpcpacking.png"))); // NOI18N

        backToMainButton.setText("Back to Main UI");
        backToMainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainButtonActionPerformed(evt);
            }
        });

        packButton.setText("Pack NPC");
        packButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("NPC Name");

        npcName.setToolTipText("Enter your Custom NPC's Name.");

        jLabel3.setText("NPC ID");

        npcID.setToolTipText("Your Custom NPC's ID.");
        npcID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcIDKeyTyped(evt);
            }
        });

        jLabel4.setText("NPC Size");

        npcSize.setText("1");
        npcSize.setToolTipText("Your Custom NPC's Size (in squares).");
        npcSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcSizeKeyTyped(evt);
            }
        });

        jLabel13.setText("NPC To Copy");

        copyNPCID.setText("-1");
        copyNPCID.setToolTipText("NPC ID To copy definitions from. Leave as -1 if no copy.");
        copyNPCID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                copyNPCIDKeyTyped(evt);
            }
        });

        jLabel16.setText("Render Animation");

        renderAnimation.setText("-1");
        renderAnimation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                renderAnimationKeyTyped(evt);
            }
        });

        jLabel17.setText("Spawn Direction");

        spawnDirection.setText("0");
        spawnDirection.setToolTipText("<html>\n<p>\nNorth Enter \"8192\"\n<br />\nSouth Enter \"0\"\n<br />\nEast Enter \"12288\"\n<br />\nWest Enter \"4096\"\n<br />\nNorthEast Enter \"10240\"\n<br />\nSouthEast Enter \"14366\"\n<br />\nNorthWest Enter \"6144\"\n<br />\nSouthWest Enter \"2048\"\n</p>\n</html>");
        spawnDirection.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spawnDirectionKeyTyped(evt);
            }
        });

        jLabel23.setText("Combat Level");

        combatLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                combatLevelKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(npcName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(npcSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(npcID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(copyNPCID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(combatLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(renderAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(spawnDirection, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel13)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copyNPCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combatLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renderAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spawnDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(262, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Basic Options", jPanel1);

        jLabel5.setText("NPC Model 1");

        npcModel1.setText("-1");
        npcModel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel1KeyTyped(evt);
            }
        });

        npcModel1Button.setText("Browse");
        npcModel1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel1ButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("NPC Model 2");

        npcModel2.setText("-1");
        npcModel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel2KeyTyped(evt);
            }
        });

        npcModel2Button.setText("Browse");
        npcModel2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel2ButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("NPC Model 3");

        npcModel3.setText("-1");
        npcModel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel3KeyTyped(evt);
            }
        });

        npcModel3Button.setText("Browse");
        npcModel3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel3ButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("NPC Model 4");

        npcModel4.setText("-1");
        npcModel4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel4KeyTyped(evt);
            }
        });

        npcModel4Button.setText("Browse");
        npcModel4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel4ButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("NPC Model 5");

        npcModel5.setText("-1");
        npcModel5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel5KeyTyped(evt);
            }
        });

        npcModel5Button.setText("Browse");
        npcModel5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel5ButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("NPC Model 6");

        npcModel6.setText("-1");
        npcModel6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel6KeyTyped(evt);
            }
        });

        npcModel6Button.setText("Browse");
        npcModel6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel6ButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("NPC Model 7");

        npcModel7.setText("-1");
        npcModel7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel7KeyTyped(evt);
            }
        });

        npcModel7Button.setText("Browse");
        npcModel7Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel7ButtonActionPerformed(evt);
            }
        });

        jLabel18.setText("NPC Model 8");

        npcModel8.setText("-1");
        npcModel8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel8KeyTyped(evt);
            }
        });

        npcModel8Button.setText("Browse");
        npcModel8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel8ButtonActionPerformed(evt);
            }
        });

        jLabel19.setText("NPC Model 9");

        npcModel9.setText("-1");
        npcModel9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel9KeyTyped(evt);
            }
        });

        npcModel9Button.setText("Browse");
        npcModel9Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel9ButtonActionPerformed(evt);
            }
        });

        jLabel20.setText("NPC Model 10");

        npcModel10.setText("-1");
        npcModel10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel10KeyTyped(evt);
            }
        });

        npcModel10Button.setText("Browse");
        npcModel10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel10ButtonActionPerformed(evt);
            }
        });

        jLabel21.setText("NPC Model 11");

        npcModel11.setText("-1");
        npcModel11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel11KeyTyped(evt);
            }
        });

        npcModel11Button.setText("Browse");
        npcModel11Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel11ButtonActionPerformed(evt);
            }
        });

        jLabel22.setText("NPC Model 12");

        npcModel12.setText("-1");
        npcModel12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npcModel12KeyTyped(evt);
            }
        });

        npcModel12Button.setText("Browse");
        npcModel12Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcModel12ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(npcModel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(npcModel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel1Button)
                            .addComponent(npcModel2Button)
                            .addComponent(npcModel3Button)
                            .addComponent(npcModel4Button)
                            .addComponent(npcModel5Button)
                            .addComponent(npcModel6Button)))
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addComponent(jLabel11)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(npcModel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npcModel7Button)
                            .addComponent(npcModel8Button)
                            .addComponent(npcModel9Button)
                            .addComponent(npcModel10Button)
                            .addComponent(npcModel11Button)
                            .addComponent(npcModel12Button))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel1Button)
                    .addComponent(npcModel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel7Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel2Button)
                    .addComponent(npcModel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel8Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel3Button)
                    .addComponent(npcModel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel9Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel4Button)
                    .addComponent(npcModel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel10Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel5Button)
                    .addComponent(npcModel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel11Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npcModel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel6Button)
                    .addComponent(npcModel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcModel12Button))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Model Options", jPanel2);

        jLabel12.setText("Changed Model Colors");

        jLabel14.setText("NPC Right Click Options");

        opt0.setText("Attack");

        opt1.setText("Talk-to");

        opt2.setText("Pickpocket");

        opt4.setText(null);

        jLabel15.setText("NPC Chat Head Model ID");

        chatHeadModel.setText("-1");
        chatHeadModel.setToolTipText("212,244 (Example. IDs must be separated by commas. Add the models into the Model Options tab)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(changedModelColors, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(opt0, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opt1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opt2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opt3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opt4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15)
                    .addComponent(chatHeadModel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changedModelColors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatHeadModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Misc Options", jPanel3);

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Output", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backToMainButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(packButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backToMainButton)
                    .addComponent(packButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backToMainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainButtonActionPerformed
        setVisible(false);
        new Main().setVisible(true);
    }//GEN-LAST:event_backToMainButtonActionPerformed

    private void npcIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcIDKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcIDKeyTyped

    private void copyNPCIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copyNPCIDKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_copyNPCIDKeyTyped

    private void npcSizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcSizeKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcSizeKeyTyped

    private void renderAnimationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_renderAnimationKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_renderAnimationKeyTyped

    private void spawnDirectionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spawnDirectionKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_spawnDirectionKeyTyped

    private void npcModel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel1KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel1KeyTyped

    private void npcModel2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel2KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel2KeyTyped

    private void npcModel3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel3KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel3KeyTyped

    private void npcModel4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel4KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel4KeyTyped

    private void npcModel5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel5KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel5KeyTyped

    private void npcModel6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel6KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel6KeyTyped

    private void npcModel7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel7KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel7KeyTyped

    private void npcModel8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel8KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel8KeyTyped

    private void npcModel9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel9KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel9KeyTyped

    private void npcModel10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel10KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel10KeyTyped

    private void npcModel11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel11KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel11KeyTyped

    private void npcModel12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npcModel12KeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_npcModel12KeyTyped

    private void combatLevelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combatLevelKeyTyped
        char key = evt.getKeyChar();
        if(key < '0' || key > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_combatLevelKeyTyped

    private void npcModel1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel1ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel1Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel1.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel1ButtonActionPerformed

    private void npcModel2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel2ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel2Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel2.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel2ButtonActionPerformed

    private void npcModel3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel3ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel3Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel3.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel3ButtonActionPerformed

    private void npcModel4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel4ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel4Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel4.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel4ButtonActionPerformed

    private void npcModel5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel5ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel5Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel5.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel5ButtonActionPerformed

    private void npcModel6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel6ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel6Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel6.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel6ButtonActionPerformed

    private void npcModel7ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel7ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel7Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel7.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel7ButtonActionPerformed

    private void npcModel8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel8ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel8Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel8.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel8ButtonActionPerformed

    private void npcModel9ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel9ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel9Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel9.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel9ButtonActionPerformed

    private void npcModel10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel10ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel10Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel10.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel10ButtonActionPerformed

    private void npcModel11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel11ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel11Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel11.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel11ButtonActionPerformed

    private void npcModel12ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcModel12ButtonActionPerformed
        Store cache = null;
        try {
            cache = new Store(currentCacheLocation);
        } catch (Exception e) {
            System.out.println("Unable to find the Current Cache Location.");
        }
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setCurrentDirectory(getDirectory());
        if (evt.getSource() == npcModel12Button) {
            int returnVal = fc.showOpenDialog(NPCUI.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    npcModel12.setText(""+Utils.packCustomModel(cache, Utils.getBytesFromFile(new File(file.getPath()))));
                } catch (IOException ex) {
                    System.out.println("Error Packing Custom Model.");
                }
                setDirectory(new File(file.getPath()));
            }
        }
    }//GEN-LAST:event_npcModel12ButtonActionPerformed

    private void packButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packButtonActionPerformed
        NPCPack.setSettings(this);
        NPCPack.proceedPacking();
    }//GEN-LAST:event_packButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NPCUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NPCUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NPCUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NPCUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NPCUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMainButton;
    private javax.swing.JTextField changedModelColors;
    private javax.swing.JTextField chatHeadModel;
    private javax.swing.JTextField combatLevel;
    private javax.swing.JTextField copyNPCID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField npcID;
    private javax.swing.JTextField npcModel1;
    private javax.swing.JTextField npcModel10;
    private javax.swing.JButton npcModel10Button;
    private javax.swing.JTextField npcModel11;
    private javax.swing.JButton npcModel11Button;
    private javax.swing.JTextField npcModel12;
    private javax.swing.JButton npcModel12Button;
    private javax.swing.JButton npcModel1Button;
    private javax.swing.JTextField npcModel2;
    private javax.swing.JButton npcModel2Button;
    private javax.swing.JTextField npcModel3;
    private javax.swing.JButton npcModel3Button;
    private javax.swing.JTextField npcModel4;
    private javax.swing.JButton npcModel4Button;
    private javax.swing.JTextField npcModel5;
    private javax.swing.JButton npcModel5Button;
    private javax.swing.JTextField npcModel6;
    private javax.swing.JButton npcModel6Button;
    private javax.swing.JTextField npcModel7;
    private javax.swing.JButton npcModel7Button;
    private javax.swing.JTextField npcModel8;
    private javax.swing.JButton npcModel8Button;
    private javax.swing.JTextField npcModel9;
    private javax.swing.JButton npcModel9Button;
    private javax.swing.JTextField npcName;
    private javax.swing.JTextField npcSize;
    private javax.swing.JTextField opt0;
    private javax.swing.JTextField opt1;
    private javax.swing.JTextField opt2;
    private javax.swing.JTextField opt3;
    private javax.swing.JTextField opt4;
    private javax.swing.JTextArea output;
    private javax.swing.JButton packButton;
    private javax.swing.JTextField renderAnimation;
    private javax.swing.JTextField spawnDirection;
    // End of variables declaration//GEN-END:variables
    private static String currentCacheLocation;

    public static String getCurrentCacheLocation() {
        return currentCacheLocation;
    }

    public static String currentCacheLocation(Main main) {
        return main.getCurrentCacheLocation().getText();
    }
    
    public static void setLocations(Main main) {
        currentCacheLocation = currentCacheLocation(main);
    }
    
    private void updateTextArea(final String text) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                output.append(text);
            }
        });
    }

    private void redirectSystemStreams() {
        OutputStream out = new OutputStream() {
            @Override
            public void write(int b) throws IOException {
                updateTextArea(String.valueOf((char) b));
            }

            @Override
            public void write(byte[] b, int off, int len) throws IOException {
                updateTextArea(new String(b, off, len));
            }

            @Override
            public void write(byte[] b) throws IOException {
                write(b, 0, b.length);
            }
        };

        System.setOut(new PrintStream(out, true));
        System.setErr(new PrintStream(out, true));
    }

    public JTextField getCombatLevel() {
        return combatLevel;
    }

    public JTextField getChangedModelColors() {
        return changedModelColors;
    }

    public JTextField getChatHeadModel() {
        return chatHeadModel;
    }

    public JTextField getCopyNPCID() {
        return copyNPCID;
    }

    public JTextField getNpcID() {
        return npcID;
    }

    public JTextField getNpcModel1() {
        return npcModel1;
    }

    public JTextField getNpcModel10() {
        return npcModel10;
    }

    public JTextField getNpcModel11() {
        return npcModel11;
    }

    public JTextField getNpcModel12() {
        return npcModel12;
    }

    public JTextField getNpcModel2() {
        return npcModel2;
    }

    public JTextField getNpcModel3() {
        return npcModel3;
    }

    public JTextField getNpcModel4() {
        return npcModel4;
    }

    public JTextField getNpcModel5() {
        return npcModel5;
    }

    public JTextField getNpcModel6() {
        return npcModel6;
    }

    public JTextField getNpcModel7() {
        return npcModel7;
    }

    public JTextField getNpcModel8() {
        return npcModel8;
    }

    public JTextField getNpcModel9() {
        return npcModel9;
    }

    public JTextField getNpcName() {
        return npcName;
    }

    public JTextField getNpcSize() {
        return npcSize;
    }

    public JTextField getOpt0() {
        return opt0;
    }

    public JTextField getOpt1() {
        return opt1;
    }

    public JTextField getOpt2() {
        return opt2;
    }

    public JTextField getOpt3() {
        return opt3;
    }

    public JTextField getOpt4() {
        return opt4;
    }

    public JTextField getRenderAnimation() {
        return renderAnimation;
    }

    public JTextField getSpawnDirection() {
        return spawnDirection;
    }
    
    final JFileChooser fc = new JFileChooser();
    File directory = new File("Desktop");

    public File getDirectory() {
        return directory;
    }

    public void setDirectory(File directory) {
        this.directory = directory;
    }
    
    
}
